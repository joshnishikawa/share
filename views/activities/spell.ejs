<%- include('../head'); -%>
<style>
  #image img{
    margin: auto;
    left: 0;
    right: 0;
    text-align: center;
    max-width:100%;
    max-height:50vh;
  }
</style>
<body>

<div class="d-flex justify-content-between">
  <%- include('../menu/item_spell'); -%>
  <button id="home" class="btn btn-sm btn-outline-secondary p-0" onclick="location.href='/'">
    <i class="material-icons">home</i>
  </button>
</div>

<div id="info" class="container">
  <div class="row pb-5">

    <div class="col text-center">
      <div class="display-1 YM">
        <%- __('activity.spell.title') %>
      </div>
      <%- __('activity.spell.1') %>
    </div>

  </div>
  <div class="row text-center">

    <div id="result" class="col" style="display:none;"></div>
    <div id="controls" class="col d-flex justify-content-center">
      <div class="d-flex align-items-center">
        <button id="start" aria-label="next" class="btn btn-lg btn-success ms-3" autofocus>
          START
        </button>
      </div>
    </div>
  </div>
</div>


<div id="content" class="container g-0" style="display:none;">
  
  <div class="row g-0">
    <div id="remaining" class="col-1 text-primary display-5 YM">42</div>
    
    <!-- answer -->
    <div class="col-11 YM">
      <div id="guess" class="d-flex flex-wrap justify-content-center my-3"></div>
      <div class="d-flex justify-content-center my-3">
        <div id="answer" class="d-flex flex-wrap justify-content-center">
          <!-- populated dynamically by resetAnswer() -->
        </div>
        <button id="next" aria-label="next" class="btn btn-lg btn-success" style="display:none;">
          <i class="material-icons">arrow_forward</i>
        </button>
      </div>
    </div>

  </div>
  <div class="row g-0">
    <!-- image -->
    <div class="col-6 text-center">
      <div id="image" class="p-4"></div>
    </div>

    <div class="col-6 d-flex flex-column justify-content-center">
      <div id="keyboard" class="container p-1 rounded-3 border text-center d-flex flex-column justify-content-center g-0" style="width:400px;">
        <div id="keyrow1" class="row g-0 justify-content-center"></div>
        <div id="keyrow2" class="row g-0 justify-content-center"></div>
        <div id="keyrow3" class="row g-0 justify-content-center"></div>
        <div id="keyrow4" class="row g-0 justify-content-center"></div>
      </div>
    </div>
  </div>
</div>


<script>
$(function(){
  $("form button[type=submit]").hide();
  
  const deckType = '<%- deckType %>';
  document.title = `Spell ${deckType}`;

  // PREPARE THE DECK ////////////////////////////////////////////////////////////
  const originalDeck = <%- JSON.stringify(deck) %> || [];
  var deck = originalDeck.slice();
  var item = {};
  var review = [];
  var place = 0;
  var guess = '';
  var misses = 0;
  var score = 0;
  var totalLetters = 0;
  var totalwords = 0;
  var finished = true;
  var correct = true;
  var firstTry = true;

  const letters = ["q","w","e","r","t","y","u","i","o","p","-",
                  "a","s","d","f","g","h","j","k","l","'",
                  "z","x","c","v","b","n","m",".",
                  " ",
                  "Q","W","E","R","T","Y","U","I","O","P",
                  "A","S","D","F","G","H","J","K","L",
                  "Z","X","C","V","B","N","M"];

  start = () =>{
    finished = false;
    score = 0;
    misses = 0;
    totalLetters = 0;

    let reviewing = review.length > 0;
    if (reviewing){
      deck = review.slice();
      review = [];
    }
    else deck = originalDeck.slice();

    totalwords = deck.length;

    // get total number of letters of all values of 'word' properties
    totalLetters = deck.reduce((acc, val) => acc + val.word.length, 0);

    deck = FYshuffle(deck);
    resetAnswer();
    $("#info").hide();
    $("#content").show();
  }

  showResults = ()=>{
    let missedwords = review.map( w => w.word ).join(', ');
    $("#result").html(`
      <div class="fs-1">Words Mastered : ${score}/${totalwords}</div><hr/>
      <div class="fs-3">Mistakes : ${misses}</div>
      <div class="fs-5">Accuracy : ${Math.round(100 * totalLetters / (totalLetters + misses)) || 100}%</div>
      <div class="fs-5">Missed: <span class="text-danger">${missedwords}</span></div>`).show();
    $("#content").hide();
    $("#info").show();
    $("#start").focus();
  }

  // input handlers
  inputLetter = (letter)=>{
    if(place < item.word.length){
      let l = [' ', '_'].includes(letter) ? ' ' : letter == 'period' ? '.' : letter; // for data-value
      let d = [' ', '_'].includes(letter) ? '&nbsp;' : letter == 'period' ? '.' : letter; // for display

      $("#place"+place ).html(d);
      place++;
      guess += l;
    }
    $("#enter").prop('disabled', place < item.word.length);
  }


  backspace = ()=>{
    if(place > 0){
      place--;
      guess = guess.slice(0, -1);
      $("#place"+place).text('_');
    }
    $("#enter").prop('disabled', true);
  }


  submitAnswer = ()=>{
    $("#enter").prop('disabled', true);
    if (guess === item.word){
      for (let i = 0; i < item.word.length; i++){
        $(`[data-value=${item.word[i] == '.' ? 'period': item.word[i] == ' ' ? '_' : item.word[i]}]`)
            .removeClass('bg-warning text-body')
            .addClass('bg-primary text-white');
      }
      $("#guess").html('');
      $("#answer").html(`<div class="btn btn-primary" style="font-size:5em;">${guess}</div>`);
      $("#next").show().focus();

      correct = true;

      if (firstTry) score++;
      else review.push(item);
      firstTry = true;
    }
    else {
      $("#guess").html(`<div class="word d-flex"></div>`);
      let remaining = []; // keep track of letters not yet guessed

      for(let i = 0; i < item.word.length; i++){
        let wordwrap = [' ', '-'].includes( item.word[i] ) ? true : false;
        let l = guess[i] == '.' ? 'period' : guess[i] == ' ' ? '_' : guess[i]; // for data-value
        let d = guess[i] == ' ' ? '&nbsp;' : guess[i]; // for display

        if(guess[i] === item.word[i]){
          $("#guess .word:last-child").append(`<div class="btn btn-lg bg-primary text-white" 
                                   style="font-size:2em; width:60px;">${d}</div>`);
          $(`[data-value=${l}]`)
            .removeClass('bg-warning bg-secondary text-body')
            .addClass('bg-primary text-white');
        }
        else if (item.word.includes(guess[i])){
          remaining.push(item.word[i]);
          $("#guess .word:last-child").append(`<div class="btn btn-lg bg-warning" 
                                  style="font-size:2em; width:60px;">${d}</div>`);
          $(`[data-value=${l}]`).addClass('bg-warning text-body');
        }
        else{
          misses++;
          remaining.push(item.word[i]);
          $("#guess .word:last-child").append(`<div class="btn btn-lg bg-secondary text-white" 
                                  style="font-size:2em; width:60px;">${d}</div>`);
          $(`[data-value=${l}]`)
            .removeClass('bg-warning text-body')
            .addClass('bg-secondary text-white');
        }
        if (wordwrap) $("#guess").append(`<div class="word d-flex"></div>`);
      }


      $("#guess .bg-warning").each(function(){
        let l = $(this).text();
        let d = l == '\xa0' ? ' ' : l == 'period' ? '.' : l;
                    //&nbsp; is \xa0 in javascript

        if ( !remaining.includes(d) ){
          $(this).removeClass('bg-warning text-body').addClass('bg-secondary text-white');
          $(`[data-value=${l}]`)
            .removeClass('bg-warning text-body')
            .addClass('bg-primary text-white');
        }
      });

      guess = '';
      place = 0;
      firstTry = false;
      $(".place").text('_');
    }
  }


  resetAnswer = ()=>{
    correct = false;
    place = 0;
    guess = '';
    $("#guess").empty();
    $("#answer").html(`<div class="word d-flex"></div>`);

    item = deck.pop();
    if (item){
      item.word = item.word.replace(/_/g, ' '); // replace underscores with spaces
      let done = originalDeck.length - deck.length;
      $("#remaining").html(`${done}/${originalDeck.length}`);

      $("#image").html(
        item.image ? `<img src="${item.image}" 
                        class="img-fluid"
                        alt="${item.word}" 
                        onerror="altOnly(this)">`
                   : `<div class="display-6 border border-primary rounded-3 text-primary">${item.meaning}</div>`);
                   for (let l = 0; l < item.word.length; l++){
        let wordwrap = [' ', '-'].includes( item.word[l] ) ? true : false;
        $("#answer .word:last-child").append(`<div id="place${l}"
                                  class="place btn btn-lg alert-primary"
                                  style="font-size:2em;width:60px;">_</div>`);

        if (wordwrap) $("#answer").append(`<div class="word d-flex"></div>`);
      }

      $("#next").hide();
      $(".letter").removeClass('bg-primary bg-warning bg-secondary text-white');
    } 
    else {
      finished = true;
      showResults();
    }
  }



  // set or reset everything
  $("#start").off('click').on('click', start);

  $("#next").on('click', resetAnswer);

  // input

  let fired = false;

  $(window).on('keydown', function(e){
    if (e.key === fired && e.key !== ' ') return;
    if (e.key === ' ') e.preventDefault();

    if(e.key.length == 1 && e.key !== fired && letters.includes(e.key)){
      fired = e.key;
      inputLetter(e.key);
    }
    else if(e.key == 'Backspace'){
      backspace();
    }
    else if(e.key == 'Enter'){
      e.preventDefault();
      if (finished) start();
      else if(correct) resetAnswer();
      else if (place === item.word.length) submitAnswer();
    }
  });

  $(window).on('keyup', function(e){
    fired = false;
  });


// KEYBOARD ////////////////////////////////////////////////////////////////////
  for ( let key of letters.slice( 0, 11)){
    $("#keyrow1").append(
      `<div data-value="${key}" class="letter rounded-3 text-center border shadow-sm me-1 mb-1" 
                                style="width:30px;cursor:default;">${key}</div>`);
  }
  for ( let key of letters.slice( 11, 21)){
    $("#keyrow2").append(
      `<div data-value="${key}" class="letter rounded-3 text-center border shadow-sm me-1 mb-1" 
                                style="width:30px;cursor:default;">${key}</div>`);
  }
  for ( let key of letters.slice( 21, 29 )){
    $("#keyrow3").append(
      `<div data-value="${key == '.' ? 'period' : key}" class="letter rounded-3 text-center border shadow-sm me-1 mb-1" 
                                style="width:30px;cursor:default;">${key}</div>`);
  }

  $("#keyrow4").html(`<div data-value="_" class="letter rounded-3 text-center border shadow-sm me-1 mb-1" 
                                style="width:160px;cursor:default;">&nbsp;</div>`)

  // $("#keyrow1").append(
  //   `<div id="backspace" class="btn btn-sm shadow-sm border me-1 mb-1" style="width:50px;">
  //       <i class="material-icons-outlined" style="font-size:1rem;">backspace</i>
  //     </div>`);

  // $("#keyrow2").append(
  //   `<button id="enter" class="btn btn-sm shadow-sm border me-1 mb-1" style="width:50px;" disabled>
  //       <i class="material-icons-outlined" style="font-size:1rem;">keyboard_return</i>
  //     </button>`);
});
</script>

<%- include('../foot'); -%><!-- FOOT INCLUDES SCRIPTS AND </body> -->
