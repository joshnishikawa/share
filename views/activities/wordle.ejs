<%- include('../head'); -%>
<style>
  #alldone{
    font-family: "UD Digi Kyokasho NP-B", sans-serif;
    font-size: 10rem;
    font-weight:bold;
    text-shadow: 5px 5px 10px #99c;
    -webkit-text-stroke: 5px DarkSlateBlue;
    color:SlateBlue;
    height:100vh;
    position:relative;
  }

  #image img{
    margin: auto;
    left: 0;
    right: 0;
    text-align: center;
    max-width:100%;
    max-height:50vh;
  }
</style>

<body>
  <a href="/" class="btn btn-sm btn-outline-secondary p-0">
    <i class="material-icons">close</i>
  </a>

  <div id="content" class="container" style="min-height:100vh;">
  
    <div class="row g-0">

      <!-- image -->
      <div class="col-4 text-center">
        <div id="image" class="p-4"></div>
      </div>

      <!-- answer -->
      <div class="col-8">
        <div id="guess" class="my-3"></div>
        <div class="d-flex my-3">
          <div id="answer"></div>
          <button id="start" aria-label="next" class="btn btn-lg btn-success" style="display:none;">
            <i class="material-icons">arrow_forward</i>
          </button>
        </div>
      </div>
    </div>

    <div class="row g-0">
      <div id="keyboard" class="container">
        <div id="keyrow1" class="row justify-content-center"></div>
        <div id="keyrow2" class="row justify-content-center"></div>
        <div id="keyrow3" class="row justify-content-center"></div>
        <div id="keyrow4" class="row justify-content-center"></div>
      </div>
    </div>
  </div>

<script src="/vocab_decks.js"></script>
<script src="/NH_vocab.js"></script>
<script src="/script.js"></script>

<script>
$(function(){
  // PREPARE THE DECK ////////////////////////////////////////////////////////////
  var url = window.location.href;
  const searchParams = new URLSearchParams(url.substring(url.indexOf('?')));
  const setName = searchParams.get('setName');
  const deckType = searchParams.get('deckType');
  const NHpage = searchParams.get('NHpage');
  var deck = [];
  var list = [];

  // We need an array of objects. Objects have info and arrays can be shuffled.
  
  switch (deckType){
    case 'NH':
      for (let i in NH_vocab[NHpage][setName]){
        deck.push({name: i, image: `<img src="/image/${NH_vocab[NHpage][setName][i].image}" alt="${i}">`});
      }
      break;
    case 'images':
      list = JSON.parse(setName);
      for (let i of list){
        deck.push({name: i.replace(/_/g, ' '), image: `<img src="/image/svg/${i}.svg" alt="${i}">`});
      }
      break;
    default:
      console.log('wordle.ejs: deckType not found');
  }

  deck = FYshuffle(deck);

  var place = 0;
  var guess = '';
  var correct = true; // just to get things started

  const letters = ["q","w","e","r","t","y","u","i","o","p",
                  "a","s","d","f","g","h","j","k","l",
                  "z","x","c","v","b","n","m","-","'",
                  " ",
                  "Q","W","E","R","T","Y","U","I","O","P",
                  "A","S","D","F","G","H","J","K","L",
                  "Z","X","C","V","B","N","M","_"];

  // input handlers
  inputLetter = (letter)=>{
    if(place < word.name.length){
      $("#place"+place).html(letter == ' ' ? '&nbsp;' : letter);
      place++;
      guess += letter;
    }
    $("#enter").prop('disabled', place < word.name.length);
  }


  backspace = ()=>{
    if(place > 0){
      place--;
      guess = guess.slice(0, -1);
      $("#place"+place).text('_');
    }
    $("#enter").prop('disabled', true);
  }


  submitAnswer = ()=>{
    $("#enter").prop('disabled', true);
    if (guess === word.name){
      for (let i = 0; i < word.name.length; i++){
        $(`[data-value=${word.name[i]}]`)
            .removeClass('bg-warning text-body')
            .addClass('bg-primary text-white');
      }
      $("#guess").html('');
      $("#answer").html(`<div class="btn btn-primary" style="font-size:5em;">${guess}</div>`);
      $("#start").show().focus();
      correct = true;
    }
    else {
      $("#guess").html('');
      let remaining = []; // keep track of letters not yet guessed

      for(let i = 0; i < word.name.length; i++){
        let l = guess[i] == ' ' ? '_' : guess[i];      // for data-value
        let d = guess[i] == ' ' ? '&nbsp;' : guess[i]; // for display

        if(guess[i] === word.name[i]){
          $("#guess").append(`<div class="btn btn-lg bg-primary text-white" 
                                   style="font-size:2em; width:60px;">${d}</div>`);
          $(`[data-value=${l}]`)
            .removeClass('bg-warning bg-secondary text-body')
            .addClass('bg-primary text-white');
        }
        else if (word.name.includes(guess[i])){
          remaining.push(word.name[i]);
          $("#guess").append(`<div class="btn btn-lg bg-warning" 
                                  style="font-size:2em; width:60px;">${d}</div>`);
          $(`[data-value=${l}]`).addClass('bg-warning text-body');
        }
        else{
          remaining.push(word.name[i]);
          $("#guess").append(`<div class="btn btn-lg bg-secondary text-white" 
                                  style="font-size:2em; width:60px;">${d}</div>`);
          $(`[data-value=${l}]`)
            .removeClass('bg-warning text-body')
            .addClass('bg-secondary text-white');
        }
      }

      $("#guess .bg-warning").each(function(){
        let l = $(this).text();
        if( !remaining.includes(l) ){
          $(this).removeClass('bg-warning text-body').addClass('bg-secondary text-white');
          $(`[data-value=${l}]`)
            .removeClass('bg-warning text-body')
            .addClass('bg-primary text-white');
        }
      });

      guess = '';
      place = 0;
      $(".place").text('_');
    }
  }


  resetAnswer = ()=>{
    correct = false;
    place = 0;
    guess = '';
    $("#guess").html('');
    $("#answer").html('');

    word = deck.pop();
    if (word){
      $("#image").html(word.image);

      for (let l = 0; l < word.name.length; l++){
        $("#answer").append(`<div id="place${l}" 
                                  class="place btn btn-lg alert-primary" 
                                  style="font-size:2em;width:60px;">_</div>`); 
      }
      $("#answer").show();

      $("#start").hide();
      $(".letter").removeClass('bg-primary bg-warning bg-secondary text-white');
    } 
    else {
      $("#content").html('<div id="alldone">All done!</div>');
    }
  }

  resetAnswer();


  // set or reset everything
  $("#start").on('click', ()=>{
    resetAnswer();
  });


  // input

  let fired = false;

  $(window).on('keydown', function(e){
    if (e.key === fired && e.key !== ' ') return;
    if (e.key === ' ') e.preventDefault();

    if(e.key.length == 1 && e.key !== fired && letters.includes(e.key)){
      fired = e.key;
      inputLetter(e.key);
    }
    else if(e.key == 'Backspace'){
      backspace();
    }
    else if(e.key == 'Enter'){
      e.preventDefault();
      if(correct){
        resetAnswer();
      }else if (place === word.name.length){
        submitAnswer();
      }
    }
  });

  $(window).on('keyup', function(e){
    fired = false;
  });


// KEYBOARD ////////////////////////////////////////////////////////////////////
  for ( let key of letters.slice( 0, 10)){
    $("#keyrow1").append(
      `<div data-value="${key}" class="letter btn btn-sm border shadow-sm me-1 mb-1" 
                                style="width:50px;">${key}</div>`);
  }
  for ( let key of letters.slice( 10, 19)){
    $("#keyrow2").append(
      `<div data-value="${key}" class="letter btn btn-sm border shadow-sm me-1 mb-1" 
                                style="width:50px;">${key}</div>`);
  }
  for ( let key of letters.slice( 19, 28 )){
    $("#keyrow3").append(
      `<div data-value="${key}" class="letter btn btn-sm border shadow-sm me-1 mb-1" 
                                style="width:50px;">${key}</div>`);
  }

  $("#keyrow4").html(`<div data-value="_" class="letter btn btn-sm border shadow-sm me-1 mb-1" 
                                style="width:360px;">&nbsp;</div>`)

  $("#keyrow1").append(
    `<div id="backspace" class="btn btn-sm shadow-sm border me-1 mb-1" style="width:50px;">
        <i class="material-icons-outlined" style="font-size:1rem;">backspace</i>
      </div>`);

  $("#keyrow2").append(
    `<button id="enter" class="btn btn-sm shadow-sm border me-1 mb-1" style="width:50px;" disabled>
        <i class="material-icons-outlined" style="font-size:1rem;">keyboard_return</i>
      </button>`);

  $(".letter").on('click', function(){
    inputLetter( $(this).attr('data-value') );
  });

  $("#backspace").on('click', function(){
    backspace();
  });

  $("#enter").on('click', ()=>{
    submitAnswer();
  });

});
</script>

<%- include('../foot'); -%><!-- FOOT INCLUDES SCRIPTS AND </body> -->
