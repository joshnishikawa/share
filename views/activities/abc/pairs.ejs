<%- include('../../head'); -%>
<body>

  <div class="d-flex">
    <a href="/abc" class="btn btn-sm btn-outline-secondary py-0">
      <i class="material-icons">home</i>
    </a>
  </div>

  <div style="min-height:100vh;user-select: none;">
    <div id="buttons" class="container d-block text-center">
      <div class="row">
        <div class="col d-flex flex-wrap justify-content-center">
          <div class="display-1 UD"><%- __('activity.pairs.title') %></div>

          <div id="result" class="mx-5 p-3 alert-success rounded-3 text-center display-5 UD mb-3 mt-auto"
                           style="display:none;">
            <span id="time"></span> seconds!
          </div>

        </div>
      </div>
      <div class="row">
        <div class="col">
          <%- __('activity.pairs.description') %>
        </div>
      </div>
      <div class="row UD">
        <button data-value="abc" class="col menu p-3 m-5 border rounded-3 alert-primary">
          <span class="display-1">abc</span><br/>
          <span class="small time"></span>
        </button>
        <button data-value="ABC" class="col menu p-3 m-5 border rounded-3 alert-primary">
          <span class="display-1">ABC</span><br/>
          <span class="small time"></span>
        </button>
      </div>
    </div>
    <div id="gridContainer">
      <div id="grid" class="d-none flex-wrap UD"></div>
    </div>
  </div>



<script>
$(function(){
  // get times from local storage
  let times = JSON.parse(localStorage.getItem('pairs'));
  times = times ? times : {};
  // add times to buttons
  for (let i in times){
    // if string, parse to float
    if (typeof times[i] == 'string') times[i] = parseFloat(times[i]); // for old bug
    $(`button[data-value="${i}"] .time`).text(times[i].toFixed(2));
  }

  $(".menu").on('click', function(){
    var deckName = $(this).data('value');
    $("#buttons").removeClass('d-block').addClass('d-none');
    $("#grid").empty().removeClass('d-none').addClass('d-flex');

    var timer = 0;
    var deck = [];

    switch (deckName){
      case 'ABC': 
        deck = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
                'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',
                'U', 'V', 'W', 'X', 'Y', 'Z'];
        break;
      
      case 'abc':
        deck = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',
                'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
                'u', 'v', 'w', 'x', 'y', 'z'];
        break;
      
      default : 
        deck = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
                'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',
                'U', 'V', 'W', 'X', 'Y', 'Z'];
        break;
    }

    FYshuffle(deck);
    deck = deck.slice(0, 12);
    deck = deck.concat(deck);
    FYshuffle(deck);

    // NOW BUILD THE GRID ////////////////////////////////////////////////////////
    for (let i = 0; i < deck.length; i++){
      $("#grid").append(
      `<div class="col-2 vocab p-0" style="height:24vh;">
          <div data-value="${deck[i]}" class="flip border-primary rounded-3 flipped m-3" style="height:80%;">
            <div class="flip-card shadow">

              <div class="flip-front bg-white rounded border display-1">
                ${deck[i]}
                </div>
              <div class="flip-back rounded border border-primary text-center alert-primary"
                  style="font-size:24vh;"></div>
            </div>
          </div>
        </div>`);
    }

    $(".flip").on('click', function(){
      $(this).toggleClass('border border-5');

      if ($('.flip.border-5').length == 2){
        if ($('.flip.border-5').first().data('value') == $('.flip.border-5').last().data('value')){
          $('.flip.border-5').removeClass('flip flipped border').off('click');
          if ($('.flip.flipped').length == 0){

            var time = (Date.now() - timer) / 1000;
            // if there is a previous time, and this time is less, use this time
            console.log(times[deckName], parseFloat(times[deckName]), time);
            if (times[deckName] && time < parseFloat(times[deckName])) {
              times[deckName] = time;
              localStorage.setItem('pairs', JSON.stringify(times));
              $(`button[data-value="${deckName}"] .time`).text(time.toFixed(2));
            }
            // if there is no previous time, use this time
            else if (!times[deckName]) {
              times[deckName] = time;
              localStorage.setItem('pairs', JSON.stringify(times));
              $(`button[data-value="${deckName}"] .time`).text(time.toFixed(2));
            }

            $("#buttons").removeClass('d-none').addClass('d-block');
            $("#grid").empty();
            $("#time").text(time); //html(`<span class="mx-5 alert-success rounded-3">${time}&nbsp;seconds!</span>`);
            $("#result").show();
          }
        }
        else {
          $('.flip.border-5').removeClass('border border-5');
        }
      }
    });
    timer = Date.now();
  });
});
</script>

<%- include('../../foot'); -%><!-- FOOT INCLUDES SCRIPTS AND </body> -->
