<%- include('../head'); -%>
<style>
  @media print {
    #menucontainer {
      display: none;
    }
    .ql-toolbar {
      display: none;
    }
    body{
      background-image: none !important;
    }

    .txt {
      font-size: 80%; /* Adjust the percentage based on your preference */
    }

    #grid {
      position: absolute;
      bottom: 50px;
    }
  }

</style>


<body>
  <div id="menucontainer"><!-- to adios the entire menu when printing -->
    <div id="menu" class="d-flex">

      <button class="btn btn-sm btn-outline-secondary p-0 me-3" data-bs-toggle="modal" data-bs-target="#grid_modal">
        <i class="material-icons">info</i>
      </button>

      <div id="numselect" class="form-group mx-3">
        <div class="d-flex rounded-3 border border-secondary">
          <label for="numCards" class="form-label px-1 mt-1 mb-0">Spaces</label>
          <input id="numCards" type="number" class="form-control form-control-sm border-0" 
                min="4" style="width:4.5rem;" aria-label="number of squares">
        </div>
      </div>

      <div class="form-check mx-3">
        <input type="checkbox" id="showtext" class="form-check-input">
        <label for="showtext" class="form-check-label">Text</label>
      </div>

      <div class="form-check mx-3">
        <input type="checkbox" id="header" class="form-check-input">
        <label for="header" class="form-check-label">Header</label>
      </div>

      <button id="print" class="btn btn-sm btn-outline-success py-0 mx-3">
        <i class="material-icons">print</i>
      </button>

    </div>
  </div>

  <div id="editorWrapper" style="display:none;">
    <div id="editor" class="bg-white w-100 border-0" autofocus></div>
  </div>
  <div id="grid" class="d-flex flex-wrap justify-content-center"></div>

<%- include ("../modals/modal_grid.ejs") %>

<link href="https://cdn.quilljs.com/1.0.0/quill.snow.css" rel="stylesheet">
<script src="https://cdn.quilljs.com/1.0.0/quill.js" defer></script>

<script>
$(function(){
  const deckType = '<%- deckType %>';

  var deck = <%- JSON.stringify(deck) %>;
  const params = <%- params %>;
  var spaces = params.spaces;
  $("#numCards").val(spaces);
  document.title = `Grid ${spaces} ${deckType}`;
  var text = (params.text == "true"); // convert string to boolean
  $("#showtext").prop('checked', text);


  getCols = (deckLength)=>{
    if (deckLength >= 144) return 12;
    if (deckLength >= 121) return 11;
    if (deckLength >= 100) return 10;
    if (deckLength >= 81) return 9;
    if (deckLength >= 64) return 8;
    if (deckLength >= 49) return 7;
    if (deckLength >= 36) return 6;
    if (deckLength >= 25) return 5;
    if (deckLength >= 16) return 4;
    if (deckLength >= 9) return 3;
    if (deckLength >= 4) return 2;
    if (deckLength >= 1) return 1;
    return 0;
  }

  setGrid = ()=>{
    spaces = parseInt($("#numCards").val());
    deck = FYshuffle(deck); // Shuffle first so cards duped/omitted are random.
    let workingdeck = FYshuffle(deck); 
    while (workingdeck.length < spaces) workingdeck = workingdeck.concat(deck);
    if (workingdeck.length > spaces) workingdeck = workingdeck.slice(0, spaces);
    workingdeck = FYshuffle(workingdeck); // shuffle so order doesn't repeat

    let cols = getCols(workingdeck.length);
    while (workingdeck.length % cols != 0) workingdeck.pop(); // reduce to a multiple of cols
    let colspan = (100 / cols - 1).toString(); // -1 to account for scrollbar

    let html = '<div class="border-top border-end d-flex flex-wrap justify-content-center">';
    for (let i = 0; i < workingdeck.length; i++){
      html +=
      `<div class="space border-start border-bottom text-center pt-3" 
            style="position:relative;width:${colspan}vw;height:${colspan}vw;">
          <img src="${workingdeck[i].image}" alt="${workingdeck[i].word}" 
               class="img-fluid position-absolute top-50 translate-middle" 
               style="max-height:75%;max-width:75%;"
               onerror="altOnly(this)">

          <div class="txt text-center YM w-100 position-absolute bottom-0 mb-1" style="display:none;" contenteditable="true">
            ${workingdeck[i].word}
          </div>

        </div>`;

      if (i % cols == cols - 1) html += '</div><div class="border-end d-flex flex-wrap justify-content-center">';
    }
    html += '</div>';

    $('#grid').html(html);

    // set height of all each .space to be the same as its width
    if (text) $('.txt').show();
  }

  $("#showtext").on('change', ()=>{
    text = $("#showtext").prop('checked');
    if (text) $('.txt').show();
    else $('.txt').hide();
  });

  $("#header").on('change', ()=>{
    let header = $("#header").prop('checked');
    if (header) $('#editorWrapper').show();
    else $('#editorWrapper').hide();
  });

  $("#print").on('click', ()=>{
    window.print();
  });

  $("#numCards").on('change', ()=>{
    setGrid();
  });

  setGrid();

  var editor = new Quill('#editor', {
    modules: {
      toolbar: {
        container: [
          {'font': [] }, 
      // {'size': ['small', false, 'large', 'huge'] }, 
          {'header': [1, 2, 3, 4, 5, 6, false] }, 
          'bold', 
          'italic', 
          'underline', 
          {'color': [] }, 
          {'background': [] }, 
          'strike', 
          {'script': 'sub'}, 
          {'script': 'super' }, 
          {'align': [] }, 
          {'indent': '+1' }, 
          {'indent': '-1'}, 
          {'list': 'ordered'}, 
          {'list': 'bullet' }, 
          'clean']
      }
    },
    theme: 'snow'
  });

});

</script>
  
<%- include('../foot'); -%><!-- FOOT INCLUDES SCRIPTS AND </body> -->
