<%- include('../head'); -%>

<style>
  .selected {
    filter: drop-shadow(0 0 0.5rem #0f0);
  }

</style>

<div class="container-fluid g-0">
  <div class="row g-0">
    <div class="col-1">
      <div class="shape svg-shape" data-shape="circle">
        <svg class="circle-svg" width="100%" height="100%" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="50" cy="50" r="45" fill="red"/>
        </svg>
      </div>
      <div class="shape svg-shape" data-shape="square">
        <svg class="square-svg" width="100%" height="100%" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="10" y="10" width="80" height="80" fill="blue"/>
        </svg>
      </div>
      <div class="shape svg-shape" data-shape="triangle">
        <svg class="triangle-svg" width="100%" height="100%" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
          <polygon points="50,5 95,95 5,95" fill="green"/>
        </svg>
      </div>
      <div class="shape svg-shape" data-shape="rectangle">
        <svg class="rectangle-svg" width="100%" height="100%" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="10" y="20" width="80" height="60" fill="yellow"/>
        </svg>
      </div>
      <div class="shape svg-shape" data-shape="heart">
        <svg class="heart-svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" fill="purple"/>
        </svg>
      </div>
      <div class="shape svg-shape" data-shape="star">
        <svg class="star-svg" width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 260 245">
          <path d="m56,237 74-228 74,228L10,96h240" fill="yellow"/>
        </svg>
      </div>
      <div class="shape svg-shape" data-shape="diamond">
        <svg class="diamond-svg" width="100%" height="100%" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
          <polygon points="50,5 85,50 50,95 15,50" fill="pink"/>
        </svg>
      </div>
    </div>

  <!-- Canvas area for dragging and dropping shapes -->
    <div class="col-11">
      <div id="canvas" class="border" style="height: 400px;">
        <!-- Shapes will be added here -->
      </div>
    </div>
  </div>
</div>

<div id="info" class="border border primary"></div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.min.js"></script>

<script>
  $(function() {

    // Remove .selected only when clicking on the canvas outside any shapes.
    $("#canvas").on("mousedown", function(event) {
      if (event.target.id === "canvas") {
        $(".shape").removeClass("selected");
      }
    });

    function setSelected() {
      // Remove the selected class from all shapes
      $(".shape").removeClass("selected").css("z-index", "0");

      // Add the selected class to the clicked shape
      $(this).addClass("selected svg").css("z-index", "1").resizable({
        containment: "#canvas",
        handles: "all",
        resize: function(event, ui) {
          // Get the current width and height
          const width = ui.size.width;
          const height = ui.size.height;

          // Update the info box with the new dimensions
          $("#info").text(`${width} x ${height}`);
        },
      });
    }


    // Make shapes draggable from the menu
    $(".shape").draggable({
      helper: "clone", // Allows dragging a copy
      revert: "invalid", // Returns the shape if not dropped on canvas
    });

    $("#menu").on("mousedown", ".shape", setSelected);
    $("#canvas").on("mousedown", ".existing-shape", setSelected);
    $("#canvas").on("touchstart", ".existing-shape", setSelected);

    // Make canvas droppable
    $("#canvas").droppable({
      drop: function(event, ui) {
        // Get the dragged shape data
        const shapeType = $(ui.draggable).data("shape");

        // Check if the dragged shape is already on the canvas
        const isExistingShape = $(ui.helper).hasClass("existing-shape");

        if (!isExistingShape) {
          // Create a div element with the corresponding SVG for a new shape
          const $shape = $(ui.helper).clone();
          $shape.removeClass("ui-draggable-dragging"); // Remove the dragging class
          $shape.removeAttr("style"); // Remove inline styles added by jQuery UI

          // Add a class to identify existing shapes on the canvas
          $shape.addClass("existing-shape selected");

          // Get the offset caused by the menu column
          const menuWidth = $(".col-1").width();
          const canvasOffset = $(this).offset();

          // Calculate the correct position for new shapes
          const relativeTop = ui.offset.top - canvasOffset.top;
          const relativeLeft = ui.offset.left - canvasOffset.left + menuWidth;

          // Set position for new shapes
          $shape.css({
            position: "absolute",
            top: relativeTop,
            left: relativeLeft,
          });

          // Append the new shape to the canvas
          $(this).append($shape);

          // Make the dropped shape draggable within the canvas
          $shape.draggable({
            containment: "#canvas",
          });

          // Add the selected class to the dropped shape
          setSelected.call($shape);
        } else {
          // If it's an existing shape, adjust its position
          $(ui.helper).css({
            top: ui.position.top,
            left: ui.position.left,
          });
        }
      },
    });
  });
</script>

<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

<%- include('../foot'); -%>