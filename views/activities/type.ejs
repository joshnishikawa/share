<%- include('../head'); -%>
<a href="/teachers" class="btn btn-sm btn-outline-secondary p-0">
  <i class="material-icons">close</i>
</a>

<script src="/script.js"></script>

<link href="https://cdn.quilljs.com/1.0.0/quill.snow.css" rel="stylesheet">
<script src="https://cdn.quilljs.com/1.0.0/quill.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/quill-image-resize-module@3.0.0/image-resize.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/file-saver@2.0.5/dist/FileSaver.min.js" defer></script>
<style>.ql-code:after {font-size:0.7em;vertical-align:top;content:"kbd";}</style>

<!-- THE editor DIV NEEDS A FIXED HEIGHT OR EMBEDS WILL BREAK -->
<div id="save" class="btn btn-sm btn-outline-primary">SAVE</div>
<div id="copy" class="btn btn-sm btn-outline-primary">COPY</div>
<div id="editor" class="bg-white" style="height:100vh;font-size:1rem;padding:50px;z-index:1;" autofocus></div>

<script>
  formatHTML = (html)=>{
    html = html == '<p><br></p>' ? ''
         : html.replace(/<p><br><\/p>/gm, '<br>')
               .replace(/ target="_blank"/gm, '')
               .replace(/<\/li>|<ul>|<\/ul>|<ol>|<\/ol>|<\/head>|<\/title>|<\/body>|<\/h1>|<\/h2>|<\/h3>|<\/h4>|<\/h5>|<\/h6>|<hr>|<\/p>|<\/pre>|<\/tr>|<table>|<\/table>|<\/summary>|<\/details>|<br>|<\/option>|<\/optgroup>|<\/select>|<\/form>|<\/map>|<\/iframe>|<\/audio>|<\/video>|<\/meter>|<\/blockquote>|<\/html>/gm, '$&\n');
    return html;
  }


$(function(){
  $('#save').click(function(){
    var title = $("#postRichText input[name=title]").val() || Date.now();
    var group = $("#postRichText select[name=group] option:selected").text() || "";
    var html = `
<!DOCTYPE html>
<html lang="en-US">
<head>
  <title>${title}</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="keywords" content="${group}">
</head>
<body>
${formatHTML(editor.root.innerHTML)}
</body>
</html>`;
    var blob = new Blob([html], {type: "text/html;charset=utf-8"});
    saveAs(blob, `${title}.html`);
  });

  $("#copy").on('click', ()=>{
    navigator.clipboard.writeText( formatHTML(editor.root.innerHTML) );
  });

// QUILL CONFIGURATION /////////////////////////////////////////////////////////
  const Image = Quill.import('formats/image');
  Image.sanitize = function (url) { return url }

  // boiler plate for using quill tooltip instead of prompt for image url
  function imageHandler() {
    const tooltip = this.quill.theme.tooltip;
    const originalSave = tooltip.save;
    const originalHide = tooltip.hide;
    tooltip.save = function () {
      const range = this.quill.getSelection(true);
      const value = this.textbox.value;
      if (value) {
        this.quill.insertEmbed(range.index, 'image', value, Quill.sources.USER);
      }
    };
    tooltip.hide = function () {
      tooltip.save = originalSave;
      tooltip.hide = originalHide;
      tooltip.hide();
    };
    tooltip.edit('image');
    tooltip.textbox.placeholder = 'Image URL';
  }

  // next 16 lines scrap quill classes in favor of inline styles to indent
  const Parchment = Quill.import('parchment')
  class IndentAttributor extends Parchment.Attributor.Style {
    add (node, value) {
      if (value === 0) {
        this.remove(node)
        return true
      } else {
        return super.add(node, `${value}em`)
      }
    }
  }
  let IndentStyle = new IndentAttributor('indent', 'text-indent', {
    scope: Parchment.Scope.BLOCK,
    whitelist: ['1em', '2em', '3em', '4em', '5em', '6em', '7em', '8em', '9em']
  })
  Quill.register(IndentStyle, true)

  // the next 12 lines scrap other quill classes in favor of inline styles
  var AlignStyle = Quill.import('attributors/style/align');
  Quill.register(AlignStyle, true);
  var BackgroundStyle = Quill.import('attributors/style/background');
  Quill.register(BackgroundStyle, true);
  var ColorStyle = Quill.import('attributors/style/color');
  Quill.register(ColorStyle, true);
  var FontStyle = Quill.import('attributors/style/font');
  Quill.register(FontStyle, true);
  var SizeStyle = Quill.import('attributors/style/size');
  Quill.register(SizeStyle, true);

  var editor = new Quill('#editor', {
    modules: {
      imageResize: {},
      toolbar: {
        container: [
          {'font': [] }, 
      // {'size': ['small', false, 'large', 'huge'] }, 
          {'header': [1, 2, 3, 4, 5, 6, false] }, 
          'bold', 
          'italic', 
          'underline', 
          {'color': [] }, 
          {'background': [] }, 
          'strike', 
          'code', 
          {'script': 'sub'}, 
          {'script': 'super' }, 
          {'align': [] }, 
          {'indent': '+1' }, 
          {'indent': '-1'}, 
          'blockquote', 
          'code-block', 
          {'list': 'ordered'}, 
          {'list': 'bullet' }, 
          'link', 
          'image', 
          'video',
          'clean'],
        handlers: {
          image: imageHandler
        }
      }
    },
    theme: 'snow'
  });

  $(".ql-toolbar").addClass("sticky-top bg-light");

});
</script>



<%- include('../foot'); -%>
