<%- include('../head'); -%>
<style>
  @media print {
    #menucontainer {
      display: none;
    }
    body{
      background-image: none !important;
    }
  }

  #flash{
    position:relative;
    font-size: 20rem;
    display:inline-block;
    text-shadow: 5px 5px 10px #99c;
    -webkit-text-stroke: 5px DarkSlateBlue;
    color:SlateBlue;
  }

  #flash .color{
    font-size: 10vw;
    color: white;
    text-shadow: none;
    -webkit-text-stroke: 3px black;
  }

  #flash img{
    position:absolute;
    margin: auto;
    left: 0;
    right: 0;
    text-align: center;
    height:90%;
    max-width:90%;
    z-index:-1;
  }

  /* add box shadow to #flash img if not .svg or .png */
  #flash img:not([src$=".svg"]):not([src$=".png"]){
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
  }

  .review{
    color:LimeGreen !important;
    text-shadow: 5px 5px 10px #9c9 !important;
    -webkit-text-stroke: 5px ForestGreen !important;
  }
</style>

<body>
<div id="menucontainer">
  <div class="d-flex">

    <button class="btn btn-sm btn-outline-secondary p-0 me-3" data-bs-toggle="modal" data-bs-target="#flash_modal">
      <i class="material-icons">info</i>
    </button>

    <div class="form-check mx-3">
      <input type="checkbox" id="shuffle" class="form-check-input">
      <label for="shuffle" class="form-check-label">Shuffle</label>
    </div>

    <div class="form-check mx-3">
      <input type="checkbox" id="showtext" class="form-check-input">
      <label for="showtext" class="form-check-label">Text</label>
    </div>
  </div>
</div>

<div id="content" style="position:relative;height:100vh;width:100%;">
  <button id="review" class="btn btn-sm btn-outline-success sticky-top" style="position:absolute;display:none;"></button>

  <div style="height:100%;position:relative;">
    <div id="flash" class="text-center p-4 NH" style="height:75%;width:100%;"></div>
    <div id="text" class="text-center display-1 YM" style="height:20%;width:100%;"></div>
  </div>

</div> 

<%- include ("../modals/modal_flash.ejs") %>

<script>
$(function(){
  const deckType = '<%- deckType %>';
  document.title = `Flash ${deckType}`;

  const originalDeck = <%- JSON.stringify(deck) %>;
  const params = <%- params %>;
  var order = params.order;
  var isNum = originalDeck[0].word.match(/^\d+$/);
  var text = (params.text == "true"); // convert string to boolean
  $("#showtext").prop('checked', text);

  var deck = originalDeck.slice();
  var deckLength = deck.length;
  var review = [];
  var card = 0;
  var reviewing = false;

  function setOrder(){
    if (order == "shuffle") {
      $("#shuffle").prop('checked', true);
      deck = FYshuffle(deck);
    }
    else if (order == "alphabetical"){
      $("#shuffle").prop('checked', false);
      if(isNum) deck.sort(function(a, b){
        return a.word - b.word}); // sort numerically
      else {
        deck.sort(function(a, b){ // sort alphabetically
          var wordA=a.word.toLowerCase(), wordB=b.word.toLowerCase();
          if (wordA < wordB) return -1;
          if (wordA > wordB) return 1;
          return 0;
        });
      }
    }
    else {
      $("#shuffle").prop('checked', false);
    }
  }


  function setText(){
    if (text) {
      $("#showtext").prop('checked', true);
      $("#text").html( deck[card].word );
    }
    else {
      $("#showtext").prop('checked', false);
      $("#text").html("");
    }
  }


  function start(){
    if (reviewing){
      deck = originalDeck.slice();
      card = 0;
      reviewing = false;
      $("#review").hide();
    }
    else if(review.length > 0){ // set the review deck as the main deck
      reviewing = true;
      deck = review.slice();
      card = 0;
      review = [];
      $("#review").html("Restart");
    }

    if(deck.length == deckLength){
      $("#flash").removeClass("review");
    }
    else{$("#flash").addClass("review")}
    let content = deckType == 'text' ? deck[card].word 
                : `<img src="${deck[card].image}" 
                        alt="${deck[card].word}"
                        onerror="altOnly(this)" >`;

    $("#flash").html(content);
    if ( $("#showtext").prop('checked') ) $("#text").html( deck[card].word );
  }


  $("#shuffle").on('click', function(){
    if ( $("#shuffle").prop('checked') ) order = "shuffle";
    else order = "alphabetical";
    setOrder();
    card = 0;
    start();
  });


  $("#showtext").on('click', function(){
    text = $("#showtext").prop('checked');
    setText();
  });


  $(document).on('keydown', (e)=>{
    if (e.key == "ArrowDown" || e.key == "ArrowUp") e.preventDefault();
  });


  // HANDLE "UP" "DOWN" "LEFT" AND "RIGHT" KEY PRESSES
  $(document).on('keyup',function(e) {
    
    switch(e.key){
      case "Enter":
        start();
        break;
      case "ArrowUp":
        reviewing = false;
        review.push(deck[card]);
        $("#review").html(`Review ${review.length}`).show();
        break;
      case "ArrowDown":
        if(review.length > 0 && review[review.length - 1] == deck[card]){
          review.pop();
          if (review.length == 0) $("#review").hide();
          else $("#review").html(`Review ${review.length}`);
        }
        break;
      case "ArrowRight":
        if (card < deck.length - 1) {
          card += 1;
          let content = deckType == 'text' ? deck[card].word 
                : `<img src="${deck[card].image}" 
                        alt="${deck[card].word}"
                        onerror="altOnly(this)">`;

          $("#flash").html(content);
          if ( $("#showtext").prop('checked') ) $("#text").html( deck[card].word );
        }
        break;
      case "ArrowLeft":
        if (card > 0 && deck.length > 0) {
          card -= 1;
          let content = deckType == 'text' ? deck[card].word 
                : `<img src="${deck[card].image}" 
                    alt="${deck[card].word}"
                    onerror="altOnly(this)">`;
          $("#flash").html(content);
          if ( $("#showtext").prop('checked') ) $("#text").html( deck[card].word );
        }
        break;
    }
  });

  $("#review").on('click', function(){
    start();
  });

  setOrder();
  setText();
  start();

});
</script>


<%- include('../foot'); -%><!-- FOOT INCLUDES SCRIPTS AND </body> -->
