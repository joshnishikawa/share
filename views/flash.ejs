<%- include('head'); -%>
<style>
  #flash{
    position:relative;
    font-family: "UD Digi Kyokasho NP-B", sans-serif;
    font-size: 30vw;
    font-weight:bold;
    display:inline-block;
    text-shadow: 5px 5px 10px #99c;
    -webkit-text-stroke: 5px DarkSlateBlue;
    color:SlateBlue;
  }

  #flash .color{
    font-size: 10vw;
    color: white;
    text-shadow: none;
    -webkit-text-stroke: 3px black;
  }

  .review{
    color:LimeGreen !important;
    text-shadow: 5px 5px 10px #9c9 !important;
    -webkit-text-stroke: 5px ForestGreen !important;
  }
</style>

<body>

<div class="d-flex">
  <a href="/" class="btn btn-sm btn-outline-secondary p-0">
    <i class="material-icons">close</i>
  </a>
  <button id="start" class="btn btn-sm btn-outline-info">START</button>
  <input type="checkbox" id="shuffle" name="shuffle" class="mx-2">
  <label for="shuffle">Shuffle</label>
</div>

<div id="flash" class="text-center p-3" style="height:100vh;width:100%;">


<script src="/vocab_decks.js"></script>
<script src="/NH_vocab.js"></script>
<script src="/script.js"></script>

<script>
$(function(){
  var url = window.location.href;
  const searchParams = new URLSearchParams(url.substring(url.indexOf('?')));
  const deckName = searchParams.get('deckName');
  const deckType = searchParams.get('deckType');
  var isNum = deckName.match(/^\d/) ? true : false;
  var deck = [];
  var list = [];

  // We need an array of objects. Objects have info and arrays can be shuffled.
  switch (deckType){
    case 'text':
      list = vocab_decks[deckName];
      for (let i of list){
        if (deckName == "colors"){
          deck.push({name: i, image: `<div class="color ${i} shadow" style="height:90%;width:100%;">${i}</div>`});
        }
        else{
          deck.push({name: i, image: i});
        }
      }
      break;
    case 'NH':
      for (let i in NH_vocab[deckName]){
        deck.push({name: i, image: `<img src="/image/${NH_vocab[deckName][i].image}" alt="${i}" 
                                         style="position:absolute;margin: auto;
                                         left: 0;right: 0;text-align: center;
                                         width:100%;z-index:-1;">`});
      }
      break;
    case 'images':
      list = JSON.parse(deckName);
      for (let i of list){
        deck.push({name: i, image: `<img src="/image/svg/${i}.svg" alt="${i}" 
                                         style="position:absolute;margin: auto;
                                         left: 0;right: 0;text-align: center;
                                         width:100%;z-index:-1;">`});
      }
      break;
    default:
      console.log('whu?');
  }

  var started = false;
  var originalDeck = deck;
  var deckLength = originalDeck.length;
  var deck = originalDeck;
  var review = [];
  var card = 0;
  var current = 0;

  function start(){
    var flash = document.getElementById("flash");
    if(review.length > 0){ // set the review deck as the main deck
      deck = review.slice();
      review = [];
    }

    if(card == 0){
      if (started){
        if (deck.length != deckLength){ // reviewing, return to the full deck
          deck = originalDeck;
          started = true;
          flash.innerHTML = deck[card].image;
        }
        else{ // using a full deck, clear screen
          started = false;
          flash.innerHTML = "";
        }
      }
      else { // start deck
        var checkBox = document.getElementById("shuffle");
        if (checkBox.checked == true){ // shuffle if checked
          deck = FYshuffle(deck);
        }
        flash.innerHTML = deck[card].image;
        started = true;
      }
    }
    else{
      card = 0;
      flash.innerHTML = deck[card].image;
    }

    if(deck.length == deckLength){
      flash.classList.remove("review");
    }
    else{flash.classList.add("review");}

    review = [];
    current = 0;
    setStartButton();
  }


  function setStartButton(){
    var start = document.getElementById("start");
    if(review.length > 0){
      start.innerHTML = "Review " + review.length;
    }

    else if (card == 0){
      if(deck.length == deckLength){ // not reviewing
        if (started){start.innerHTML = "Clear";}
        else if (deckLength > 0){
          start.innerHTML = "Start";
        }
        else{
          start.innerHTML = " . . . ";
        }
      }
      else if (deckLength > 0){
        start.innerHTML = "Restart Set";
      }
    }
    else{
      
      if (deck.length == deckLength){ // not reviewing
        start.innerHTML = "Restart";}
      else{
        start.innerHTML = "Restart Review";}
    }
  }

  $("#shuffle").on('click', ()=>{
    var checkBox = document.getElementById("shuffle");

    if (checkBox.checked == true){ // shuffle
      deck = FYshuffle(deck);
      card = 0;
    }
    else {
      if(isNum == "zero_ten" 
      || isNum == "zero_twenty" 
      || isNum == "tens_teens"){
        deck.sort(function(a, b){return a - b}); // sort numeric
      }
      else{ // sort alphabetical
        deck.sort();
      }
      card = current == 0 ? 0 : deck.indexOf(current);
    }
  });


  // HANDLE "UP" "DOWN" "LEFT" AND "RIGHT" KEY PRESSES
  $(document).on('keyup',function(e) {
    var obj = document.getElementById("start");
    var selecting = (document.activeElement === obj);

    if(selecting && started){
      if(e.key == "ArrowRight" || e.key == "ArrowUp"){

        if(e.key == "ArrowUp"){ //save card before advancing
          review.push(deck[card]); // push entire
        }

        if (card < deck.length - 1) {
          card += 1;
          current = deck[card].image;
          document.getElementById("flash").innerHTML = deck[card].image;
        }
      }
      else if(e.key == "ArrowLeft"){
        if (card > 0 && deck.length > 0) {
          card -= 1;
          current = deck[card].image;
          document.getElementById("flash").innerHTML = deck[card].image;
        }
        else{
        }
      }
      else {
        // do something with down key
      }
    }
    setStartButton();
  });


// ADVANCE THROUGH THE DECK WHEN THE WINDOW IS CLICKED (OR TAPPED) /////////////
  window.onclick = function(event){
    if (started && !event.target.matches('button') && !event.target.matches('select') &&
        !event.target.matches('input') && !event.target.matches('label')) {
      if(card < deck.length -1){
          card += 1;
          current = deck[card].image;
          document.getElementById("flash").innerHTML = deck[card].image;
      }
      else{
        document.getElementById("flash").innerHTML = " ";
      }
    }
    setStartButton();
  }


  $("#start").on('click', ()=>{
    $("#start").focus();
    start();
  });

  $("#start").focus();
  start();

});
</script>


<%- include('foot'); -%><!-- FOOT INCLUDES SCRIPTS AND </body> -->
