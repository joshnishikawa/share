<%- include('../head'); -%>

<div class="container pt-3">

  <div class="row">

    <div class="col">
      <div class="d-flex">
        <input type="text" class="form-control" id="typed" placeholder="comma-separated words or phrases">
        <div id="type" class="btn btn-lg btn-success">
          <i class="material-icons">add</i>
        </div>
      </div>
    </div>

    <div class="col d-flex">
      <div id="listen" class="btn btn-lg btn-success">
        <i class="material-icons">mic</i>
      </div>
      <div id="output"></div>
    </div>

  </div>
  <div class="row">

    <div id="words" class="col p-3"></div>

  </div>
  <div class="d-flex"><%- include('../menu/menu_spell') %></div>
</div>



<!-- <script src="javascripts/spell.js" type="text/javascript"></script> -->

<script>
  $(function(){
    window.deckType = 'nolink';
    window.deck = [];

    const SpeechRecognition =
      window.SpeechRecognition || window.webkitSpeechRecognition;
    const SpeechGrammarList =
      window.SpeechGrammarList || window.webkitSpeechGrammarList;
    const SpeechRecognitionEvent =
      window.SpeechRecognitionEvent || window.webkitSpeechRecognitionEvent;

      
    var recognition = new SpeechRecognition();
    const words = <%- JSON.stringify(words) %>;
    // const grammar = `#JSGF V1.0; grammar words; public <word> = ${words.join(" | ")};`;
    // var speechRecognitionList = new SpeechGrammarList();
    // speechRecognitionList.addFromString(grammar, 1);
    // recognition.grammars = speechRecognitionList;
    recognition.continuous = false;
    recognition.lang = "en-US";
    recognition.interimResults = false;
    recognition.maxAlternatives = 1;


    // LISTEN
    $("#listen").on('mousedown', () => {
      recognition.start();
    }).on('mouseup', () => {
      $("#output").html('');
      recognition.stop();
    });

    // TYPE
    $("#type").on('click', () => {
      let typed = $("#typed").val();
      typed = typed.split(',').map((w) => w.trim());

      for (let word of typed){
        if (!words.includes(word)) {
          word = word.toLowerCase();
          if (!words.includes(word)) {
            continue;
          }
        }
        addWord(word);
      }
    });


    // SPEECH RECOGNITION
    recognition.onstart = () => {
      $("#output").html("Listening...");
    };

    recognition.onresult = (event) => {
      let word = event.results[0][0].transcript;
      let conf = Math.round(event.results[0][0].confidence*100);
      console.log(`"${word}" ${conf}%`);

      if (!words.includes(word)) {
        word = word.toLowerCase();
        if (!words.includes(word)) {
          return;
        }
      }
      addWord(word);
    };
  
    recognition.onerror = (event) => {
      console.error(event);
      $("#output").html(`Error occurred in recognition: ${event.error}`);
    };

    function addWord(w) {
      window.deck.push(w);
      console.log(window.deck);
      $("#words").append(`<div class="word alert-primary badge shadow m-1 fs-3">
                            ${w} 
                            <div class="btn btn-close"></div>
                            </div>`);

      $(".btn-close").off('click').on('click', (event) => {
        $(event.target).parent().remove();
      });
    }

  });
  </script>

  <%- include('../foot') %>