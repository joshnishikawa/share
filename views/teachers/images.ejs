<%- include('../head.ejs') -%>
<%- include('navbar.ejs') -%>

<div class="container-fluid">
  <div class="row">

    <div class="col-2">PHONICS</div>
    <div class="col-6">THEMES</div>
    <div class="col-2">NO. OF LETTERS</div>
    <div class="col-2 d-flex justify-content-between">
      <div>LIST<span id="numOfItems"> (0)</span></div>
      <div class="small text-danger">Edit this last!</div>
    </div>

  </div>
  <div id="select" class="row mb-3">
    <div id="phonics" class="col-2 ps-1" style="height:286px;overflow-y:scroll;">
      <div class="d-flex">
        <div>Starts&nbsp;with&nbsp;</div>
        <input id="startsWith" type="text" pattern="[A-Za-z,]"  placeholder="b,dr,..."
               class="form-control form-control-sm" aria-label="starts with">
      </div>
  
      Short Vowels
      <div id="short" class="d-flex flex-wrap"></div>
      Long Vowels
      <div id="long" class="d-flex flex-wrap mb-2"></div>
    </div>
    
    <div id="themes" class="col-6 d-flex flex-wrap ps-1" style="height:286px;overflow-y:scroll;"></div>
    
    <div id="numbers" class="col-2" style="height:286px;overflow-y:scroll;">
      <div class="d-flex">
        <input id="numGTE" type="number" min="3" value="3" 
               class="form-control form-control-sm" style="width:50px;">
        <div>&nbsp;at least</div>
      </div>

      <div class="d-flex">
        <input id="numLTE" type="number" 
               class="form-control form-control-sm" style="width:50px;">
        <div>&nbsp;at most</div>
      </div>

    </div>

    <div class="col-2" style="display: flex;flex-direction: column;">
      <textarea id="list" class="form-control" style="min-height:286px"></textarea>
    </div>


  </div>
  <div class="row">
    <div class="col">
      <div class="row pb-3">

        <div class="col">
          <%- include('../menu/menu_flash.ejs') -%>
        </div>
      
        <div class="col">
          <%- include('../menu/menu_match.ejs') -%>
        </div>
      
        <div class="col">
          <%- include('../menu/menu_recall.ejs') -%>
        </div>
      
      </div>
      <div class="row pb-3">
  
        <div class="col">
          <%- include('../menu/menu_bingo.ejs') -%>
        </div>
      
        <div class="col">
          <%- include('../menu/menu_reveal.ejs') -%>
        </div>
      
        <div class="col">
          <%- include('../menu/menu_grid.ejs') -%>
        </div>
      
      </div>
      <div class="row">

        <div class="col">
          <%- include('../menu/menu_type.ejs') -%>
        </div>

        <div class="col">
          <%- include('../menu/menu_wordle.ejs') -%>
        </div>
        <div class="col"></div>

      </div>
    </div>
  </div>
</div>



<script>
$(function(){
  $(`#images-tab`).addClass("active");
  window.deckType = "images";
  var tags = {};
  var allWords = []; // in case only selecting 'Starts with' and/or 'No. of letters'
  var words = [];


  function updateWordList(){
    let checkedPhonics = $("#phonics input:checked").toArray().map(e => e.value).join(',').split(',');
    let checkedThemes = $("#themes input:checked").toArray().map(e => e.value).join(',').split(',');
    let sw = $("#startsWith").val().split(',').map(e => e.trim()).filter(e => e);
    let gt = $("#numGTE").val();
    let lt = $("#numLTE").val();

    checkedPhonics = checkedPhonics.filter(e => e);// remove empty strings
    checkedThemes = checkedThemes.filter(e => e);  // remove empty strings

    // Then get the intersection of checkedPhonics and checkedThemes
    if (checkedPhonics.length != 0 && checkedThemes.length != 0)
      words = checkedPhonics.filter(value => checkedThemes.includes(value));
    else if (checkedPhonics.length == 0 && checkedThemes.length != 0)
      words = checkedThemes;
    else if (checkedPhonics.length != 0 && checkedThemes.length == 0)
      words = checkedPhonics;
    else words = [];

    if (words.length == 0 && (gt || lt || sw.length > 0) ) words = allWords;

    // filter for words that start with anything in sw array
    if (sw.length > 0) {
      words = words.filter(value => {
        for (let i in sw) {
          if (value.startsWith(sw[i])) return true;
        }
        return false; 
      });
    }

    // filter words array for number of letters
    words = words.filter(value => {
      let len = value.length;

      if ( (!gt || gt == 0) && (!lt || lt == 0) ) return true;
      else if (gt && gt != 0 && len >= gt) 
        if (!lt || lt == 0) return true;
        else if (lt && lt != 0 && len <= lt) return true;
        else return false;
      else return false;
    });

    words = words.filter(e => e);// remove empty strings
    words = [...new Set(words)]; // remove duplicates

    $("#list").val(words.join(', '));
    window.setName = JSON.stringify(words);
    $("#numOfItems").html(`&nbsp;(${words.length})`);
  }


  $.getJSON('/image/svg/_tags.json', function(data) {
    tags = data;

    // FIXME: Dry up this for loop
    for (let t in tags) {
      allWords = allWords.concat(tags[t]);
      if ( ["short_a", "short_e", "short_i", "short_o", "short_u"].includes(t) ){
        $(`#short`).append(`
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="tags" id="tag_${t}" value="${tags[t]}" aria-label="tags">
            <label class="form-check-label me-2" style="margin-left:-5px;" for="tag_${t}">${t.split('_')[1]}</label>
          </div>`);
      }
      else if ( ["long_a", "long_e", "long_i", "long_o", "long_u"].includes(t) ){
        $(`#long`).append(`
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="tags" id="tag_${t}" value="${tags[t]}" aria-label="tags">
            <label class="form-check-label me-2" style="margin-left:-5px;" for="tag_${t}">${t.split('_')[1]}</label>
          </div>`);
      }
      else if ( ["soft c", "soft g", "blends", "magic e", "friendly h", "bossy r", "sneaky y", "oo", "silent letters"].includes(t) ){
        $(`#phonics`).append(`
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="tags" id="tag_${t}" value="${tags[t]}" aria-label="tags">
            <label class="form-check-label me-2" style="margin-left:-5px;" for="tag_${t}">${t} (${tags[t].length})</label>
          </div>`);
      }
      else {
        $(`#themes`).append(`
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="tags" id="tag_${t}" value="${tags[t]}" aria-label="tags">
            <label class="form-check-label me-2" style="margin-left:-5px;" for="tag_${t}">${t} (${tags[t].length})</label>
          </div>`);
      }
    }
    allWords = [...new Set(allWords)]; // remove duplicates


    $("#select input").on('change', (e)=>{
      updateWordList();
    });
  });


  $("#numLTE").on('change', function(){
    let minval = parseInt( $("#numGTE").val() );
    let thisval = parseInt( $(this).val() );
    if ( thisval && thisval < minval ) {
      $(this).attr('min', minval);
      $(this).val( Math.max( minval, thisval) );
    }
  });

  $("#numGTE").on('change', function(){
    let maxval = parseInt( $("#numLTE").val() );
    if ( !maxval ) return;

    let minval = parseInt( $(this).val() );
    if ( minval > maxval ) $("#numLTE").val(minval);
  });

  
  $("#list").on('input', ()=>{
    words = $("#list").val().split(',');
    $("#numOfItems").html(`&nbsp;&nbsp;&nbsp;(${words.length})`);
    for (let i in words) {
      words[i] = words[i].trim().replace(/\s/g, '_');
    }
    window.setName = JSON.stringify(words);
  });

});
</script>

<%- include('../foot.ejs') -%>
