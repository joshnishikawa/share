<style>
  .vertical-label {
      text-align: right;
      font-weight: bold;
      writing-mode: vertical-lr;
      transform: rotate(180deg);
      white-space: nowrap;
      padding: 0.5rem 0;
    }
</style>

<div class="ms-3 text-muted">NEW HORIZON VOCAB</div>

<div id="themes" class="d-flex flex-wrap">
  <!-- Content will be populated dynamically -->
</div>


<script>
  // Initialize global variables
  window.deck = [];
  window.local = [];
  window.deckType = 'NH';

  // Define global functions
  addWords = (list) => {
    for (let l of list) {
      if (!window.deck.includes(l.id)) {
        window.deck.push(l.id);
        window.local.push(l);
      }
    }
  }

  removeWords = (list) => {
    for (let i of list) {
      window.deck = window.deck.filter(d => d !== i && d !== i.id && d !== i.word);
      window.local = window.local.filter(l => l.id !== i.id && l.id !== i.word);
    }
  }
  
$(function(){
  let NH_vocab = {};
  let colors = {};

  // Function to create themes HTML
  function createThemesHTML(NH_vocab, colors, translations) {
    let html = '';
    
    for (let p in NH_vocab) {
      let color = '';
      for (let c in colors) {
        if (colors[c].includes(p)) {
          color = c;
          break;
        }
      }
      
      if (p == '+') {
        html += '<div id="deleteme" class="flex-grow-1">.</div>';
        html += '<div id="growme" class="rounded-3 p-1 flex-grow-1" style="margin:1px;background-color:lightgray;">';
        html += '<div id="' + p + '" class="d-flex flex-wrap">';
        
        for (let t in NH_vocab[p]) {
          let id = t.replace(/ /g, "_");
          let translatedTheme = translations[t] || t; // fallback to original if no translation
          html += '<div class="form-check" style="width:fit-content;">';
          html += '<input id="theme_' + id + '" name="themes" aria-label="themes" class="form-check-input" type="checkbox" value="' + t + '">';
          html += '<label class="form-check-label me-3" style="margin-left:-5px;" for="theme_' + id + '">';
          html += translatedTheme + ' <u>' + Object.keys(NH_vocab[p][t]).length + '</u>';
          html += '</label>';
          html += '</div>';
        }
        
        html += '</div>';
        html += '</div>';
      } else {
        html += '<div class="rounded-3 p-1 d-flex" style="margin:1px;background-color:' + color + '">';
        html += '<div class="vertical-label">' + p.replace(/_/g, ' ') + '</div>';
        html += '<div id="' + p + '">';
        
        for (let t in NH_vocab[p]) {
          let id = t.replace(/ /g, "_");
          let translatedTheme = translations[t] || t; // fallback to original if no translation
          html += '<div class="form-check">';
          html += '<input id="theme_' + id + '" name="themes" aria-label="themes" class="form-check-input" type="checkbox" value="' + t + '">';
          html += '<label class="form-check-label me-3" style="margin-left:-5px;" for="theme_' + id + '">';
          html += translatedTheme + ' <u>' + Object.keys(NH_vocab[p][t]).length + '</u>';
          html += '</label>';
          html += '</div>';
        }
        
        html += '</div>';
        html += '</div>';
      }
    }
    
    return html;
  }

  // Function to set up event handlers
  function setupEventHandlers() {
    $(window).on('resize', function(){
      $("#deleteme").show();
      $("#growme").width( Math.max($("#deleteme").width()-10, 55) );
      $("#deleteme").hide();
    });

    $("#themes input").on('change', function(){
      let list = [];
      let p = $(this).parent().parent().attr('id');
      let theme = $(this).val();

      for (let word in NH_vocab[p][theme]) {
        let id = NH_vocab[p][theme][word];
        list.push({word, id});
      }

      if ($(this).is(':checked')) {
        addWords(list);
      } else {
        removeWords(list);
      }
    });
  }

  // Load NH vocabulary data via AJAX
  $.get('/api/nh-vocab')
    .done(function(data) {
      NH_vocab = data.NH_vocab;
      colors = data.colors;
      
      // Populate the themes div
      $('#themes').html(createThemesHTML(NH_vocab, colors, data.translations));
      
      // Set up event handlers
      setupEventHandlers();
      $("#growme").width( Math.max($("#deleteme").width()-10, 55) );
      $("#deleteme").hide();
    })
    .fail(function(xhr, status, error) {
      console.error('Failed to load NH vocabulary data:', error);
      $('#themes').html('<div class="alert alert-danger">Failed to load vocabulary data</div>');
    });
});
</script>
