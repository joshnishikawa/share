<style>
  .vertical-label {
      text-align: right;
      font-weight: bold;
      writing-mode: vertical-lr;
      transform: rotate(180deg);
      white-space: nowrap;
      padding: 0.5rem 0;
    }
</style>

<div class="container-fluid pb-3">
  <div class="row">

    <div class="col-9"><%- __('themes') %></div>

    <div class="col-3 d-flex justify-content-between">
      <div><%- __('list') %><span id="numOfItems"> (0)</span></div>
      <div class="small text-danger"><%- __('editThisLast') %></div>
    </div>

  </div>
  <div class="row">

    <div class="col-9 g-0 px-1">
      <div id="themes" class="d-flex flex-wrap">
<% for (let p in NH_vocab) { let color = ''; for (let c in colors) { if (colors[c].includes(p)) {color = c; break;}} %>
  <% if (p == '+'){ %>
        <div id="deleteme" class="flex-grow-1">.</div>
        <div id="growme" class="rounded-3 p-1 flex-grow-1" style="margin:1px;background-color:lightgray;">
          
          <div id="<%- p %>" class="d-flex flex-wrap">

    <% for (let t in NH_vocab[p]) { %>
      <% let id = t.replace(/ /g, "_"); %>
            <div class="form-check" style="width:fit-content;">
              <input aria-label="themes" class="form-check-input" type="checkbox" id="<%- id %>" name="themes" value="<%- t %>">
              <label class="form-check-label me-3" style="margin-left:-5px;" for="<%- id %>"><%- __(t) %> <u><%- Object.keys(NH_vocab[p][t]).length %></u></label>
            </div>
    <% } %>
          </div>

        </div>
  <% } else { %>
        <div class="rounded-3 p-1 d-flex" style="margin:1px;background-color:<%- color %>">
          <div class="vertical-label"><%- p.replace(/_/g, ' ') %></div>
          <div id="<%- p %>">

    <% for (let t in NH_vocab[p]) { %>
      <% let id = t.replace(/ /g, "_"); %>
            <div class="form-check">
              <input aria-label="themes" class="form-check-input" type="checkbox" id="<%- id %>" name="themes" value="<%- t %>">
              <label class="form-check-label me-3" style="margin-left:-5px;" for="<%- id %>"><%- __(t) %> <u><%- Object.keys(NH_vocab[p][t]).length %></u></label>
            </div>
    <% } %>
          </div>
        </div>
  <% } %>
<% } %>
      </div>
    </div>

    <div class="col-3" style="position:relative;">
      <div id="list" class="d-flex flex-wrap" style="position:absolute;max-height:100%;overflow-y:scroll;"></div>
    </div>

  </div>

</div>


<script>
  // I could probably populate the menu here using javascript then it wouldn't
  // conflict with jquery handlers that are set after the page is loaded.
$(function(){
  // But I only need that last div to be flex-grow-1 AND d-flex flex-wrap. So...
  // Set #growme to the width of #deletme. Then hide #deleteme. (also on resize)
  $("#growme").width($("#deleteme").width() -20);
  $("#deleteme").hide();

  $(window).on('resize', function(){
    $("#deleteme").show();
    $("#growme").width($("#deleteme").width() -20);
    $("#deleteme").hide();
  });





  let NH_vocab = <%- JSON.stringify(NH_vocab) %>;
  window.deckType = 'NH';
  window.deck = [];

  function updateWordList(){
    window.deck = [];
    $("#list").empty();

    let checkedThemes = $("#themes input:checked").toArray().map(e => e.value);
    checkedThemes = checkedThemes.filter(e => e);  // remove empty strings

    for (let theme of checkedThemes) {
      let p = $(`input:checked[value="${theme}"]`).parent().parent().attr('id');

      for (let word in NH_vocab[p][theme]) {
        let val = NH_vocab[p][theme][word];
        window.deck.push(val);
        $("#list").append(`
          <div class="alert-primary rounded-3 mb-1 me-1 ps-1 d-flex justify-content-between">
            <div>${word}</div>
            <div id="${word}" data-value="${val}" class="list btn btn-close" style="font-size:10px;"></div>
          </div>
        `);
      }
    }

    $(".list").on('click', function(){
      let val = $(this).data('value');
      window.deck = window.deck.filter(e => e !== val);
      $(this).parent().remove();
      $("#numOfItems").html(`&nbsp;(${window.deck.length})`);
    });

    $("#numOfItems").html(`&nbsp;(${window.deck.length})`);
  }


  $("#themes input").on('change', ()=>{
    updateWordList();
  });

});
</script>
